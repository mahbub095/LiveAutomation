stages:
    - test
    - build
    - deploy

image: node:14.18.0-alpine

variables:
    npm_config_cache: "$CI_PROJECT_DIR/.npm"
    CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

cache:
    paths:
        - node_modules/
        - .npm
        - cache/Cypress

test:
    # we need chrome image for running cypress
    image: markhobson/node-chrome
    stage: test
    # we need to run e2e test cases when commit on develop branch
    rules:
        - if: $CI_COMMIT_BRANCH == "develop"
    script:
        # we need to install these packages, because above node image doesn't come with these packages
        - apt-get update && apt-get install -y git libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
        - npm install
        # need to install wait-on, this package is to wait and pause next scripts until server totally serve
        - npm install -g wait-on
        - ./node_modules/.bin/cypress install --force
        - npm run e2e:run:headless
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - node_modules/
        policy: pull
    artifacts:
        expire_in: 1 hour

build-staging:
    stage: build
    rules:
        - if: $CI_COMMIT_BRANCH == "develop"
    script:
        - apk add git
        - npm install --production
        - npm run build:staging
    artifacts:
        paths:
            # Build folder
            - $CI_PROJECT_DIR/dist/staging
        expire_in: 1 hour

deploy-staging:
    stage: deploy
    rules:
        - if: $CI_COMMIT_BRANCH == "develop"
    script:
        - npm install -g firebase-tools
        - firebase deploy --only hosting:staging -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN
